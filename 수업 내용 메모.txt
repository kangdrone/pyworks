
IDE(통합개발환경)

로컬(내 컴퓨터) 서버 주소
url : http://127.0.0.1:5500/    (127.0.0.1) <- localhost

파이썬 - 플라스크(비 기업용), 장고(기업용)
웹 서버 or 웹프레임워크
직접 코딩 - 웹 서버 생성
url - http://127.0.0.1:5000/  (플라스크)웹 프레임워크(미니멀)
ulr - http://127.0.0.1:8000/  (장고)대형 웹 프레임워크

항(operand)
연산에 사용되는 값

연산자(operator)
연산에 사용되는 기호

연산자 종류 
대입 '='
산술 + = * / %
비교 > >= =< <== !=
?
?

regDate - 등록일 추가
1. 테이블 삭제 - DROP TABLE member
2. 칼럼 추가 -ALTER ? ?

(lambda)람다함수 - ? ?
람다함수랑 같이 쓰는 함수
map( ) - 매핑:맞추는 것
filter( ) - 필터링

모듈 ( import OOO )
내장모듈 - 파일(.py) -> 함수, 클래스
math - 수학 계산 관련 모듈
datetime - 날짜,시간 관련 모듈
time - 시간 관련 모듈
calender - 달력 관련 모듈
random - 랜덤 변환 모듈
sys - 변수와 함수를 직접 제어가능하게 만드는 모듈
threading - 일정 주기마다 함수를 실행하는 모듈
os - 환경 변수나 디렉터리,파일 등의 OS 자원을 제어할 수 있게 해주는 모듈
glob - ? ? ?

리스트 관련 제어문
OOO = [ ] 빈 리스트 생성
OOO.append( ) - 리스트 뒤에 추가
OOO.add( ) - 리스트에서 요소 추가
OOO.remove( ) - 리스트에서 요소 삭제
OOO.insert(  ,  ) - 순서정하고 추가
OOO.pop( ) - 리스트 맨 뒤 삭제
OOO.sort( ) - 오름차순
OOO.reverse( ) - 거꾸로 뒤집기
del OOO[ ] = - 리스트에서 요소 삭제
OOO.len( ) - 리스트 개수

리스트 문자열 관련 함수
split( ) - 문자 구분
replace( ) - 문자 추가
format( ) - 문자열 중간에 문자 추가
set( ) - 중복 제거 후 출력
find( ) - 문자열 검색
strip( ) - 양쪽 공백 문자 제거  ( rstrip( ) - 오른쪽 공백 문자 제거, lstrip( ) - 왼쪽 공백 문자 제거 )


수학 관련 함수
int( ) - 수
str ( ) - 문자
abs( ) - 절댓값
round( ) - 반올림
eval( ) - 문자열 수식 계산

변수 관련 제어문
global - 프로그램 종료시 소멸
return - 반복
access - 로그인 성공 여부

객체 관련 제어문
__init__(self) - 객체 생성
__str__(self) - 객체의 정보

도형그리기 관련 명령어
OOO.up() - 펜 올리기
OOO.down() - 펜 내리기
OOO.onkeypress() - 키 조종    ex) OOO.onkeypress(turn_left, "Left") - 왼쪽 키 조종
OOO.listen() - 실행 대기
OOO.mainloop() - 애니메이션 다 그린후 대기

파일 객체 - f = open(파일이름.모드)
r (읽기 모드) - 파일을 읽을 때 사용
w (쓰기 모드) - 파일을 쓸 때 사용
a (추가모드) - 파일의 마지막에 내용을 추가할 때 사용

웹 서버 관련 명령어
@000.route() - 경로 설정

폴더에 필요한 파일들
templates 폴더 - .html
static 폴더 - css, image, js
app.py - 실행

* ========
def add(x, y):
    return x + y

total = add(10, 11)  < 여기서 이미  x값(지역변수)을 넘겨준 후 소멸되서  x값출력이 에러가 난다.
print(total)
print(x)  < - 출력 에러
========

달력(캘린더)부르기<Sheel>
import calendar
>>> import calendar as cal
>>> cal.prmonth(2021, 9)
cal.weekday(2021, 9, 7)
1
>>> cal.weekday(2021, 9, 6)
0
>>> cal.monthrange(2021, 9)
(2, 30)
>>> 

정규 표현식(점프 투 파이선 p.291 참고)
import re